% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Modifier-class.R
\docType{class}
\name{Modifier-class}
\alias{Modifier-class}
\alias{Modifier}
\alias{Modifier,SequenceData-method}
\alias{Modifier,SequenceDataSet-method}
\alias{Modifier,SequenceDataList-method}
\alias{Modifier,character-method}
\alias{Modifier,list-method}
\alias{Modifier,BamFileList-method}
\title{The Modifier class}
\usage{
\S4method{Modifier}{SequenceData}(className, x, annotation = NULL,
  sequences = NULL, seqinfo = NULL, ...)

\S4method{Modifier}{SequenceDataSet}(className, x, annotation = NULL,
  sequences = NULL, seqinfo = NULL, ...)

\S4method{Modifier}{SequenceDataList}(className, x, annotation = NULL,
  sequences = NULL, seqinfo = NULL, ...)

\S4method{Modifier}{character}(className, x, annotation = NULL,
  sequences = NULL, seqinfo = NULL, ...)

\S4method{Modifier}{list}(className, x, annotation = NULL,
  sequences = NULL, seqinfo = NULL, ...)

\S4method{Modifier}{BamFileList}(className, x, annotation = NULL,
  sequences = NULL, seqinfo = NULL, ...)
}
\arguments{
\item{className}{The name of the class which should be constructed.}

\item{x}{the input which can be of the following types
\itemize{
\item{\code{SequenceData}:} {a single \code{SequenceData} or a list containg
only \code{SequenceData} objects. The input will just be used as elements of
the \code{Modifier} and must match the requirements of specific
\code{Modifier} class }
\item{\code{BamFileList}:} {a named \code{BamFileList}}
\item{\code{character}:} {a \code{character} vector, which must be coercible
to a named \code{BamFileList} referencing existing bam files. Valid names are
\code{control} and \code{treated} to define conditions and replicates}
}}

\item{annotation}{annotation data, which must match the information contained
in the BAM files. This is parameter is only required if \code{x} if not a 
\code{Modifier} object.}

\item{sequences}{sequences matching the target sequences the reads were 
mapped onto. This must match the information contained in the BAM files. This
is parameter is only required if \code{x} if not a \code{Modifier} object.}

\item{seqinfo}{optional \code{\link[GenomeInfoDb:Seqinfo]{Seqinfo}} to 
subset the transcripts analyzed on a chromosome basis.}

\item{...}{Additional otpional parameters:
\itemize{
\item{\code{find.mod}:} {\code{TRUE} or \code{FALSE}: should the search for for 
modifications be triggered upon construction? If not the search can be 
started by calling the \code{modify()} function.}
}
All other arguments will be passed onto the \code{SequenceData} objects.}
}
\value{
a \code{Modifier} object of type \code{className}
}
\description{
The \code{Modifier} class is a virtual class, which provides the central 
functionality for searching for patterns of post-transcriptional RNA 
modifications in high throughput sequencing data.

Each subclass has to implement the following functions:

\itemize{
\item{\code{\link{aggregate}}: }{used for specific data aggregation}
\item{\code{\link{modify}}: }{used for specific search for modifications}
}

Optionally the function \code{\link[=Modifier-functions]{settings<-}} can be
implemented to store additional arguments, which the base class does not
recognize.

\code{Modifier} objects are constructed centrally by calling 
\code{Modifier()} with a \code{className} matching the specific class to be
constructed. This will trigger the immediate analysis, if \code{find.mod} is
not set to \code{TRUE}.
}
\section{Slots}{

\describe{
\item{\code{mod}}{a \code{character} value, which needs to contain one or more 
elements from the alphabet of a 
\code{\link[Modstrings:ModRNAString]{ModRNAString}} class.}

\item{\code{score}}{the main score identifier used for visualizations}

\item{\code{dataType}}{the class name(s) of the \code{SequenceData} class used}

\item{\code{bamfiles}}{the input bam files as \code{BamFileList}}

\item{\code{condition}}{conditions along the \code{BamFileList}: Either 
\code{control} or \code{treated}}

\item{\code{replicate}}{replicate number along the \code{BamFileList} for each of the
condition types.}

\item{\code{data}}{The sequence data object: Either a \code{SequenceData}, 
\code{SequenceDataSet} or a \code{SequenceDataList} object, if more than one 
\code{dataType} is used.}

\item{\code{aggregate}}{the aggregated data as a \code{SplitDataFrameList}}

\item{\code{modifications}}{the found modifications as a \code{GRanges} object}

\item{\code{arguments}}{arguments used for the analysis as a \code{list}}

\item{\code{aggregateValidForCurrentArguments}}{\code{TRUE} or \code{FALSE} whether
the aggregate data was constructed with the current arguments}

\item{\code{modificationsValidForCurrentArguments}}{\code{TRUE} or \code{FALSE} 
whether the modifications were found with the current arguments}
}}

\section{Creation}{
 
\code{Modifier} objects can be created in two ways, either by providing a
list of bamfiles or 
\code{SequenceData}/\code{SequenceDataSet}/\code{SequenceDataList} objects, 
which match the structure in \code{dataType()}.

\code{dataType()} can be a \code{character} vector or a \code{list} of
\code{character} vectors and depending on this the input files have to 
follow this structure:

\itemize{
\item{a single \code{character}:} {a \code{SequenceData} is
constructed/expected.}
\item{a \code{character} vector:} {a \code{SequenceDataSet} is
constructed/expected.}
\item{a \code{list} of \code{character} vectors:} {a \code{SequenceDataList}
is constructed/expected.}
}

The cases for a \code{SequenceData} or \code{SequenceDataSet} are rather
obvious, since the input remains the same. The last case is special, since
it is a hypothetical option in case bam files from to different methods 
have to be combined to reliably detect a single modification (The elements of
a \code{SequenceDataList} don't have to be created from the bamfiles). 

For this example a \code{list} of \code{character} vectors is expected.
Each element must be named according to the names of \code{dataType()} and 
contain a \code{character} vector for creating a \code{SequenceData} object.
}

