% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/SequenceData-class.R,
%   R/SequenceDataSet-class.R, R/SequenceDataList-class.R, R/Modifier-class.R,
%   R/ModifierSet-class.R
\docType{methods}
\name{aggregate}
\alias{aggregate}
\alias{aggregateData}
\alias{getAggregateData}
\alias{hasAggregateData}
\alias{aggregate,SequenceData-method}
\alias{aggregateData,SequenceData-method}
\alias{aggregate,SequenceDataSet-method}
\alias{aggregate,SequenceDataList-method}
\alias{aggregate,Modifier-method}
\alias{aggregateData,Modifier-method}
\alias{getAggregateData,Modifier-method}
\alias{hasAggregateData,Modifier-method}
\alias{aggregate,ModifierSet-method}
\title{Aggreagte data per positions}
\usage{
aggregate(x, ...)

aggregateData(x, ...)

getAggregateData(x)

hasAggregateData(x)

\S4method{aggregate}{SequenceData}(x, condition = c())

\S4method{aggregateData}{SequenceData}(x, condition)

\S4method{aggregate}{SequenceDataSet}(x, condition = "Treated")

\S4method{aggregate}{SequenceDataList}(x, condition = "Treated")

\S4method{aggregate}{Modifier}(x, force = FALSE)

\S4method{aggregateData}{Modifier}(x)

\S4method{getAggregateData}{Modifier}(x)

\S4method{hasAggregateData}{Modifier}(x)

\S4method{aggregate}{ModifierSet}(x, force = FALSE)
}
\arguments{
\item{x}{a \code{\link[=SequenceData-class]{SequenceData}} or
\code{\link[=Modifier-class]{Modifier}} object.}

\item{...}{additional arguments}

\item{condition}{character value, which selects, for which condition the data
should be aggregated. One of the following values: \code{Both}, 
\code{Control}, \code{Treated}}

\item{force}{whether to recreate the aggregated data, if it is already stored
inside the \code{Modifier} object.}
}
\value{
\itemize{
\item{\code{aggregate}: }{for \code{SequenceData} the aggregated data is
returned as a \code{SplitDataFrameList} with an element per transcript, 
whereas for a \code{Modifier} the modified input object is returned, 
containing the aggregated data, which can be accessed using 
\code{getAggregateData}.}
\item{\code{getAggregateData}: }{only for \code{Modifier}: a 
\code{SplitDataFrameList} with an element per transcript is returned. If the 
aggregated data is not stored in the object, it is generated on the fly, but 
does not persist}
\item{\code{hasAggregateData}: }{TRUE or FALSE. Does the \code{Modifier} 
object already contain aggregated data?}
}

If 'x' is a
\itemize{
\item{\code{\link[=SequenceData-class]{SequenceData}}} {a 
\code{SplitDataFrameList} with elments per transcript.}
\item{\code{\link[=Modifier-class]{Modifier}}} {an updated \code{Modifier}
object. The data can be accessed by using the \code{aggregateData} function.}
}
}
\description{
The aggregate function is defined per
\code{\link[=SequenceData-class]{SequenceData}} object and can be triggered
by either using the a \code{\link[=SequenceData-class]{SequenceData}} or
\code{\link[=Modifier-class]{Modifier}}. For the letter it will just redirect
to the \code{\link[=SequenceData-class]{SequenceData}} object, but will store
the result. The data is then used for subsequent tasks, such as search for
modifications and visualization of the results.
}
\examples{
data(e5sd,package="RNAmodR")
data(msi,package="RNAmodR")
# aggregate() triggers the aggregation of data contained in a SequenceData,
# Modifier or ModifierSet objects
sdfl <- aggregate(e5sd)
mi <- aggregate(msi[[1]])
msi <- aggregate(msi)
}
